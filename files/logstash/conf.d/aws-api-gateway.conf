# Pipeline for AWS API Gateway

input {
  cloudwatch_logs {
    log_group => "/aws/apigateway/"
    log_group_prefix => true
    start_position => "end"
    interval => 10
    region => "ap-northeast-2"
    # access_key_id => ""
    # secret_access_key => ""
    type => "aws-api-gateway"
  }
}


filter {
  grok {
    match => {
      "[cloudwatch_logs][log_group]" => [
        "^/aws/apigateway/%{GREEDYDATA:name}$"
      ]
    }
    break_on_match => false
    tag_on_failure => []
  }

  json {
    source => "message"
    skip_on_invalid_json => true
    remove_field => [ "message" ]
  }

  if [apigateway][stage] =~ /prod/ {
    mutate {
      add_field => { "env" => "production" }
    }
  } else if [apigateway][stage] =~ /dev/ {
    mutate {
      add_field => { "env" => "development" }
    }
  } else {
    drop {}
  }

  mutate {
    add_field => { "event" => "access" }
    convert => {
      "[req][time]" => "integer"
      "[res][length]" => "integer"
      "[res][statusCode]" => "integer"
    }
  }

  geoip {
    source => "[req][ip]"
    target => "geoip"
    tag_on_failure => [ "_geoip_lookup_failure" ]
  }

  date {
    match => [ "[req][time]", "UNIX_MS" ]
    target => "[req][time]"
  }

  useragent {
    source => "[req][userAgent]"
    target => "agent"
  }
}


output {
  elasticsearch {
    hosts => [ "elasticsearch:9200" ]
    index => "log-%{env}-apigateway-%{+YYYY.MM.dd}"
  }

  # For Debugging
  # stdout {
  #   codec => rubydebug
  # }
}
