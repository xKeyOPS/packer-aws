# Pipeline for AWS Lambda

input {
  cloudwatch_logs {
    log_group => "/aws/lambda/"
    log_group_prefix => true
    start_position => "end"
    interval => 10
    region => "ap-northeast-2"
    # access_key_id => ""
    # secret_access_key => ""
    type => "aws-lambda"
  }
}


filter {
  grok {
    match => {
      "[cloudwatch_logs][log_group]" => [
        "^/aws/lambda/%{GREEDYDATA:name}$",
        "^/aws/lambda/.*-%{GREEDYDATA:[lambda][stage]}$"
      ]
    }
    break_on_match => false
    tag_on_failure => []
  }

  if [lambda][stage] =~ /prod/ {
    mutate {
      add_field => { "env" => "production" }
    }
  } else if [lambda][stage] =~ /dev/ {
    mutate {
      add_field => { "env" => "development" }
    }
  } else {
    drop {}
  }

  grok {
    match => {
      "message" => [
        "^%{WORD:event} RequestId: %{UUID:reqId}\s*%{GREEDYDATA:message}\s*\n$",
        "^%{TIMESTAMP_ISO8601}\t%{UUID:reqId}\t%{GREEDYDATA:message}$"
      ]
    }
    overwrite => [ "message" ]
    keep_empty_captures => true
    tag_on_failure => []
  }

  if [event] == "REPORT" {
    grok {
      match => {
        "message" => "^Duration: %{BASE16FLOAT:[lambda][duration]} ms\tBilled Duration: %{BASE16FLOAT:[lambda][billed_duration]} ms \tMemory Size: %{BASE10NUM:[lambda][memory_size]} MB\tMax Memory Used: %{BASE10NUM:[lambda][memory_used]} MB"
      }
      tag_on_failure => []
    }

    mutate {
      convert => {
        "[lambda][duration]" => "float"
        "[lambda][billed_duration]" => "integer"
        "[lambda][memory_size]" => "integer"
        "[lambda][memory_used]" => "integer"
      }
    }
  } else if [event] == "START" {
    grok {
      match => {
        "message" => "^Version: %{GREEDYDATA:[lambda][version]}"
      }
      tag_on_failure => []
    }
  } else if ![event] {
    json {
      source => "message"
      skip_on_invalid_json => true
      remove_field => [ "message", "time", "v", "pid" ]
    }
  }

  mutate {
    lowercase => [ "event" ]
    rename => { "message" => "msg" }
  }
}


output {
  elasticsearch {
    hosts => [ "elasticsearch:9200" ]
    index => "log-%{env}-lambda-%{+YYYY.MM.dd}"
  }

  # For Debugging
  # stdout {
  #   codec => rubydebug
  # }
}
